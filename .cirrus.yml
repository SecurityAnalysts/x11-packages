container:
  image: xeffyr/termux-extra-packages-builder:latest
  cpu: 8
  memory: 16

# Build packages.
build_task:
  # Run task only if packages were modified.
  # Note that similar check is done in 'scripts/get-modified-packages.sh'.
  only_if: "changesInclude('packages/**')"

  # 2 hours is a maximal timeout for free use.
  timeout_in: 120m

  environment:
    matrix:
      TERMUX_ARCH: aarch64
      TERMUX_ARCH: arm
      TERMUX_ARCH: i686
      TERMUX_ARCH: x86_64

  # Do not use built-in git client provided by Cirrus as it
  # causes problems when determining changed files.
  clone_script: |
    if [[ -z "$CIRRUS_PR" ]]; then
      git clone --recursive --branch=$CIRRUS_BRANCH https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git $CIRRUS_WORKING_DIR
      git reset --hard $CIRRUS_CHANGE_IN_REPO
    else
      git clone --recursive https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git $CIRRUS_WORKING_DIR
      git fetch origin pull/$CIRRUS_PR/head:pull/$CIRRUS_PR
      git reset --hard $CIRRUS_CHANGE_IN_REPO
    fi

  # Copy packages into 'termux-packages' build environment.
  prepare_script: |
    [ -n "$CIRRUS_PR" ] && echo "CIRRUS_PR: $CIRRUS_PR"
    [ -n "$CIRRUS_BASE_SHA" ] && echo "CIRRUS_BASE_SHA: $CIRRUS_BASE_SHA"
    [ -n "$CIRRUS_LAST_GREEN_CHANGE" ] && echo "CIRRUS_LAST_GREEN_CHANGE: $CIRRUS_LAST_GREEN_CHANGE"
    [ -n "$CIRRUS_CHANGE_IN_REPO" ] && echo "CIRRUS_CHANGE_IN_REPO: $CIRRUS_CHANGE_IN_REPO"
    for pkg in ./packages/*; do
        if [ ! -d "./termux-packages/packages/$(basename "$pkg")" ]; then
            cp -a "$pkg" ./termux-packages/packages/
        else
            echo "[!] Package '$(basename "$pkg")' already exists in build environment. Skipping."
        fi
    done

  # Determine changes in repository and build modified packages.
  build_script: |
    MODIFIED_PACKAGES=$(./scripts/get-modified-packages.sh)
    if [ -n "$MODIFIED_PACKAGES" ]; then
        cd ./termux-packages
        for package in $MODIFIED_PACKAGES; do
            if [ -n "$CIRRUS_PR" ]; then
                # Perform full builds for PR.
                ./build-package.sh -a "$TERMUX_ARCH" "$package"
            else
                ./build-package.sh -I -a "$TERMUX_ARCH" "$package"
            fi
        done
        if [ -d ./debs ]; then
            rm -rf ../debs
            mv ./debs ../
        fi
    fi

  # Make built packages available for the next tasks.
  share_packages_cache:
    folder: "./debs"
    fingerprint_script: echo "$CIRRUS_CHANGE_IN_REPO"

  # Also make them downloadable from the UI.
  store_packages_artifacts:
    path: "./debs/*.deb"

# Publish packages to Bintray.
publish_task:
  only_if: $CIRRUS_BRANCH == 'android-5'

  timeout_in: 30m

  depends_on:
    - build

  environment:
    BINTRAY_USERNAME: ENCRYPTED[90abba51ac0c50d868f2d78ac4d48ed0fe8ecb79d53f15697afd261c440c7999cbe910696a65221668b3826cff3c756f]
    BINTRAY_API_KEY: ENCRYPTED[0329a0c1d74d51a02f47e1ab5a079a017959bafa8b241cbc6a0404217a8719ed7ded99837db9c1846cb17309657dfc8d]

  # Retrieve built packages.
  share_packages_cache:
    folder: "./debs"
    fingerprint_script: echo "$CIRRUS_CHANGE_IN_REPO"

  # Publish.
  upload_to_bintray_script: |
    MODIFIED_PACKAGES=$(./scripts/get-modified-packages.sh)
    if [ -n "$MODIFIED_PACKAGES" ]; then
        ./scripts/package_uploader.sh $MODIFIED_PACKAGES
    fi
